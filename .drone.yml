# ---
# kind: secret
# metadata:
#   namespace: drone-runner
# name: docker_username
# get:
#   path: my-drone-runner-docker-hub-secrets
#   name: username
# ---
# kind: secret
# metadata:
#   namespace: drone-runner
# name: docker_password
# get:
#   path: my-drone-runner-docker-hub-secrets
#   name: password
# ---
kind: pipeline
type: kubernetes
name: go
service_account_name: drone-runner
metadata:
  namespace: drone-runner

steps:
- name: env-test
  image: golang:1.20-alpine
  environment:
    USERNAME:
      from_secret: docker_username
    TESTVALUE: "ABCCDEF"
  commands:
  - echo ${USERNAME}
  - echo $${USERNAME}
  - echo $USERNAME
  - echo ${TESTVALUE}
  - echo $${TESTVALUE}
  - echo $TESTVALUE  
  - local_value="test"
  - echo $local_value
  - echo ${local_value}
- name: init
  image: golang:1.20-alpine
  volumes:
  - name: deps
    path: /go  
  commands:
  - cd services/hello-world
  - go mod tidy
  depends_on:
    - env-test
- name: test
  image: golang:1.20-alpine
  volumes:
  - name: deps
    path: /go  
  commands:
  - cd services/hello-world
  - go test -v ./...
  depends_on:
    - init 
- name: build
  image: golang:1.20-alpine
  volumes:
  - name: deps
    path: /go  
  commands:
  - cd services/hello-world
  - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o ./build/main ./cmd/main.go
  depends_on:
    - init
    - test
- name: containerize
  image: gcr.io/kaniko-project/executor:debug
  commands:
  - cd services/hello-world
  - /kaniko/executor --dockerfile Dockerfile --context . --no-push --destination=docker.io/devopstester1234/hello-world-go:0.0.0-${DRONE_COMMIT} --tar-path=docker_image.tar
  depends_on:
    - build
- name: push-docker-image
  image: mgoltzsche/podman:4.4.3-minmal
  environment:
    USERNAME:
      from_secret: docker_username
    PASSWORD:
      from_secret: docker_password
  commands:
  - podman logout
  - podman login -u "$${USERNAME}" -p "$${PASSWORD}" "docker.io"
  - image_name="$(podman load -i  services/hello-world/docker_image.tar | cut -f3 -d' ')"
  - podman push "$image_name"
  depends_on:
    - containerize
volumes:
- name: deps
  temp: {}    
